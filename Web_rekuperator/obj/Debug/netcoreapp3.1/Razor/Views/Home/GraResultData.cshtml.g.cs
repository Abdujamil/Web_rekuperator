#pragma checksum "C:\Users\gaffo\source\repos\Web_rekuperator\Web_rekuperator\Views\Home\GraResultData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f0f7f2f34bdab3e7ea1c535f641b7bbdb8300bee"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_GraResultData), @"mvc.1.0.view", @"/Views/Home/GraResultData.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\gaffo\source\repos\Web_rekuperator\Web_rekuperator\Views\_ViewImports.cshtml"
using Web_rekuperator;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\gaffo\source\repos\Web_rekuperator\Web_rekuperator\Views\_ViewImports.cshtml"
using Web_rekuperator.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f0f7f2f34bdab3e7ea1c535f641b7bbdb8300bee", @"/Views/Home/GraResultData.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0909c1fbb2aa3536a43394774a5552d8f85b049d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_GraResultData : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "C:\Users\gaffo\source\repos\Web_rekuperator\Web_rekuperator\Views\Home\GraResultData.cshtml"
   ViewData["Title"] = "График"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    body{
        background-image: url(/img/Group-5.png);
        background-repeat: no-repeat;
        background-size: cover;
    }
</style>

<div class=""text-center"">
    <h7 class=""display-4""><b>График зависимости Количество продуктов горения перед рекуператором от Расхода топлива на печь</b></h7>

</div>

<canvas id=""myChart"" width=""300"" height=""150""></canvas>

<script>
    var ctx = document.getElementById('myChart');

    // Global Options:
    Chart.defaults.global.defaultFontColor = 'black';
    Chart.defaults.global.defaultFontSize = 16;

    var data = {
        labels: ");
#nullable restore
#line 27 "C:\Users\gaffo\source\repos\Web_rekuperator\Web_rekuperator\Views\Home\GraResultData.cshtml"
           Write(Json.Serialize(ViewBag.x));

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
        datasets: [{
            label: """",
            fill: false,
            lineTension: 0.1,
            backgroundColor: ""rgba(225,225,225,100%)"", 
            borderColor: ""blue"", // The main line color
            borderCapStyle: 'square',
            borderDash: [], // try [5, 15] for instance
            borderDashOffset: 0.0,
            borderJoinStyle: 'miter',
            pointBorderColor: ""black"",
            pointBackgroundColor: ""blue"",
            pointBorderWidth: 1,
            pointHoverRadius: 8,
            pointHoverBackgroundColor: ""black"",
            pointHoverBorderColor: ""black"",
            pointHoverBorderWidth: 2,
            pointRadius: 4,
            pointHitRadius: 10,
            // notice the gap in the data and the spanGaps: true
            data:");
#nullable restore
#line 48 "C:\Users\gaffo\source\repos\Web_rekuperator\Web_rekuperator\Views\Home\GraResultData.cshtml"
            Write(Json.Serialize(ViewBag.y));

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
            spanGaps: true,
        }

        ]
    };

    // Notice the scaleLabel at the same level as Ticks
    var options = {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                },
                scaleLabel: {
                    display: true,
                    labelString:'Количество продуктов горения перед рекуператором',
                    fontSize: 20
                }
            }],

            xAxes: [{
                ticks: {
                    beginAtZero: true
                },
                scaleLabel: {
                    display: true,
                    labelString: 'Расход топлива на печь',
                    fontSize: 20
                }
            }]
        }
    };

    // Chart declaration:
    var myBarChart = new Chart(ctx, {
        type: 'line',
        data: data,
        options: options
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
